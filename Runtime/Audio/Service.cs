using System;
using System.Linq;
using MokomoGamesLib.Runtime.Audio.ResourceMasterTable.AutoGenerated;
using MokomoGamesLib.Runtime.GameConfigs;
using UnityEngine;

namespace MokomoGamesLib.Runtime.Audio
{
    public static class Service
    {
        public static void PlayOneShot(SoundName soundName, AudioManager audioManager, GameConfigManager gameConfigManager)
        {
            if (gameConfigManager.Config.IsMute) return;
            var speaker = audioManager.GetOrCreateSpeaker(soundName);
            var speakerPresenter = audioManager.GetOrCreateSpeakerPresenter(speaker);
            speakerPresenter.PlayOneShot(speaker.AudioClip);
        }

        public static void Stop(SoundName soundName, AudioManager audioManager)
        {
            audioManager.GetOrCreateSpeakerPresenter(audioManager.GetOrCreateSpeaker(soundName)).Stop();
        }

        public static void StopAll(AudioManager audioManager)
        {
            Enum
                .GetValues(typeof(SoundName)).Cast<SoundName>()
                .ToList()
                .ForEach(x => { Stop(x, audioManager); });
        }
    }
}